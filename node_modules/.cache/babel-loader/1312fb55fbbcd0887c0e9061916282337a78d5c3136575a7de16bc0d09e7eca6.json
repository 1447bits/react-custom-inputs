{"ast":null,"code":"var _jsxFileName = \"/home/atharv/gitPrograms/react-custom-inputs/src/components/CustomInputTag.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomInputTag = ({\n  type\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const handleInputChange = event => {\n    const sanitizedValue = event.target.value.replace(/[^\\d.]/g, '');\n    const formattedValue = type === 'percentage' ? sanitizedValue : sanitizedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    setValue(formattedValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"customInputTag\",\n      type: \"text\",\n      value: `${type === 'currency' ? '$' : ''}${value}${type === 'percentage' ? '%' : ''}`,\n      onChange: handleInputChange,\n      placeholder: type === 'currency' ? 'Enter amount' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomInputTag, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = CustomInputTag;\nexport default CustomInputTag;\nvar _c;\n$RefreshReg$(_c, \"CustomInputTag\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CustomInputTag","type","_s","value","setValue","handleInputChange","event","sanitizedValue","target","replace","formattedValue","children","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/atharv/gitPrograms/react-custom-inputs/src/components/CustomInputTag.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react';\n\ninterface CustomInputProps {\n    type: string;\n}\n\nconst CustomInputTag: React.FC<CustomInputProps> = ({ type }) => {\n    const [value, setValue] = useState<string>('');\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const sanitizedValue = event.target.value.replace(/[^\\d.]/g, '');\n\n        const formattedValue =\n            type === 'percentage'\n                ? sanitizedValue\n                : sanitizedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n        setValue(formattedValue);\n    };\n\n    return (\n        <div>\n            <input\n                className='customInputTag'\n                type=\"text\"\n                value={`${type === 'currency' ? '$' : ''}${value}${type === 'percentage' ? '%' : ''}`}\n                onChange={handleInputChange}\n                placeholder={type === 'currency' ? 'Enter amount' : ''}\n            />\n        </div>\n    );\n};\n\nexport default CustomInputTag;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAqB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrD,MAAMC,cAA0C,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMQ,iBAAiB,GAAIC,KAAoC,IAAK;IAChE,MAAMC,cAAc,GAAGD,KAAK,CAACE,MAAM,CAACL,KAAK,CAACM,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IAEhE,MAAMC,cAAc,GAChBT,IAAI,KAAK,YAAY,GACfM,cAAc,GACdA,cAAc,CAACE,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;IAE9DL,QAAQ,CAACM,cAAc,CAAC;EAC5B,CAAC;EAED,oBACIX,OAAA;IAAAY,QAAA,eACIZ,OAAA;MACIa,SAAS,EAAC,gBAAgB;MAC1BX,IAAI,EAAC,MAAM;MACXE,KAAK,EAAG,GAAEF,IAAI,KAAK,UAAU,GAAG,GAAG,GAAG,EAAG,GAAEE,KAAM,GAAEF,IAAI,KAAK,YAAY,GAAG,GAAG,GAAG,EAAG,EAAE;MACtFY,QAAQ,EAAER,iBAAkB;MAC5BS,WAAW,EAAEb,IAAI,KAAK,UAAU,GAAG,cAAc,GAAG;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChB,EAAA,CAzBIF,cAA0C;AAAAmB,EAAA,GAA1CnB,cAA0C;AA2BhD,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}